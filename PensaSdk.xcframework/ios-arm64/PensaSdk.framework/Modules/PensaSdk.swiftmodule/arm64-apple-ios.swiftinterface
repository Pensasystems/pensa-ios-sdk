// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PensaSdk
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import AVKit
import BackgroundTasks
import Combine
import CoreData
import CoreLocation
import CoreMotion
import CoreTelephony
import DeveloperToolsSupport
import Foundation
import MessageUI
import Network
@_exported import PensaSdk
import Swift
import SwiftUI
import SystemConfiguration
import UIKit
import UserNotifications
import _AVKit_SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class Pensa {
  public static let shared: PensaSdk.Pensa
  public func initPensa(clientId: Swift.String, clientSecret: Swift.String, _ completionHandler: @escaping ((any Swift.Error)?) -> Swift.Void)
  public func enableLogging()
  public func disableLogging()
  public func isStarted() -> Swift.Bool
  public func showSearchStoreScreen()
  public func showStoreChecklistScreen(storeId: Swift.Int)
  public func showStoreChecklistScreenWithTdlinxCode(categoryId: Swift.String, guid: Swift.String, tdlinxCode: Swift.String)
  public func launchScanAreaScreen(storeId: Swift.Int, scanAreaId: Swift.Int)
  public func showUploadScreen()
  public func showRecentVisitsScreen()
  public func getStoreData(storeId: Swift.String, onSuccess: @escaping (PensaSdk.StoreEntity) -> Swift.Void, onError: @escaping ((any Swift.Error)?) -> Swift.Void)
  public func getShelfData(storeId: Swift.String, shelfId: Swift.String, onSuccess: @escaping (PensaSdk.ShelfEntity) -> Swift.Void, onError: @escaping ((any Swift.Error)?) -> Swift.Void)
  public func getScanAreaData(storeId: Swift.String, scanAreaId: Swift.String, onSuccess: @escaping (PensaSdk.ScanAreaEntity) -> Swift.Void, onError: @escaping ((any Swift.Error)?) -> Swift.Void)
  public func getScanStatus(storeId: Swift.String, scanAreaId: Swift.String) -> PensaSdk.ScanStatus?
  @objc deinit
}

public enum ScanStatus : Swift.String, Swift.CaseIterable, Swift.Codable {
  case noAttempt
  case cantScan
  case failed
  case success
  case waitingForScanId
  case scanIdReceived
  case uploading
  case waitingForLastApiCall
  case scanReceivedToday
  public init?(rawValue: Swift.String)
  public typealias AllCases = [PensaSdk.ScanStatus]
  public typealias RawValue = Swift.String
  nonisolated public static var allCases: [PensaSdk.ScanStatus] {
    get
  }
  public var rawValue: Swift.String {
    get
  }
}
extension Foundation.NSMutableAttributedString {
  public func setAsLink(textToFind: Swift.String, linkUrl: Swift.String) -> Swift.Bool
}
extension UIKit.UINavigationController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewWillLayoutSubviews()
}
extension PensaSdk.StoreEntity {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PensaSdk.StoreEntity>
  @objc @NSManaged dynamic public var address: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var allowDisplayShelfScanning: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var allowOutOfServiceScans: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var allowQrCodeScanning: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var bannerId: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var bannerName: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var distance: Swift.Double {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var id: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var latitude: Swift.Double {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var longitude: Swift.Double {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var onboardingType: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var retailerId: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var retailerName: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scanAreaImage: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var shelves: Foundation.NSSet? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var tdlinxCode: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var timezone: Swift.String? {
    @objc get
    @objc set
  }
}
extension PensaSdk.StoreEntity {
  @objc(addShelvesObject:) @NSManaged dynamic public func addToShelves(_ value: PensaSdk.ShelfEntity)
  @objc(removeShelvesObject:) @NSManaged dynamic public func removeFromShelves(_ value: PensaSdk.ShelfEntity)
  @objc(addShelves:) @NSManaged dynamic public func addToShelves(_ values: Foundation.NSSet)
  @objc(removeShelves:) @NSManaged dynamic public func removeFromShelves(_ values: Foundation.NSSet)
}
extension PensaSdk.StoreEntity : Swift.Identifiable {
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
  public typealias ID = Swift.Int32
}
extension PensaSdk.ShelfEntity {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PensaSdk.ShelfEntity>
  @objc @NSManaged dynamic public var categoryId: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var desc: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var id: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var onboarding: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var orientation: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scanIsDue: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scanIsEligible: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scanIsOverdue: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scored: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var sectionKey: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var sectionName: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scanAreas: Foundation.NSSet? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var store: PensaSdk.StoreEntity? {
    @objc get
    @objc set
  }
}
extension PensaSdk.ShelfEntity {
  @objc(addScanAreasObject:) @NSManaged dynamic public func addToScanAreas(_ value: PensaSdk.ScanAreaEntity)
  @objc(removeScanAreasObject:) @NSManaged dynamic public func removeFromScanAreas(_ value: PensaSdk.ScanAreaEntity)
  @objc(addScanAreas:) @NSManaged dynamic public func addToScanAreas(_ values: Foundation.NSSet)
  @objc(removeScanAreas:) @NSManaged dynamic public func removeFromScanAreas(_ values: Foundation.NSSet)
}
extension PensaSdk.ShelfEntity : Swift.Identifiable {
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
  public typealias ID = Swift.Int32
}
@_inheritsConvenienceInitializers @objc(ScanAreaEntity) public class ScanAreaEntity : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(ShelfEntity) public class ShelfEntity : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(StoreEntity) public class StoreEntity : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension PensaSdk.ScanAreaEntity {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PensaSdk.ScanAreaEntity>
  @objc @NSManaged dynamic public var desc: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var id: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var shelfOrderIndex: Swift.Int32 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var lastScanTimestamp: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var lastScanUuid: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var scanAreaType: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var sectionName: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var shelf: PensaSdk.ShelfEntity? {
    @objc get
    @objc set
  }
}
extension PensaSdk.ScanAreaEntity : Swift.Identifiable {
  @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
  public typealias ID = Swift.Int32
}
extension PensaSdk.ScanStatus : Swift.Equatable {}
extension PensaSdk.ScanStatus : Swift.Hashable {}
extension PensaSdk.ScanStatus : Swift.RawRepresentable {}
